//
//  PopularFilmsViewController.swift
//  Movies
//
//  Created by Alex Cuello ortiz on 06/01/2018.
//  Copyright (c) 2018 Alex Cuello ortiz. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit


protocol PopularFilmsViewControllerInput {
    func displayFilms(viewModel: PopularFilmsScene.PopularFilmsList.ViewModel)
}

protocol PopularFilmsViewControllerOutput {
    func getFilms(request: PopularFilmsScene.PopularFilmsList.Request)
}

class PopularFilmsViewController: UIViewController, PopularFilmsViewControllerInput {
    
    var output: PopularFilmsViewControllerOutput?
    var router: PopularFilmsRouter?
    
    // MARK: Object lifecycle
    
    struct cellIdentifiers {
        static let popularFilmCell = "popularFilmCell"
    }
    
    @IBOutlet weak var popularFilmsTableView: UITableView!
    @IBOutlet weak var popularFilmsSearchBar: UISearchBar!
    @IBOutlet weak var loaderIndicatorView: UIActivityIndicatorView!
    
    var page: Int = 0
    
    var filteredDisplayFilms: [PopularFilmsScene.PopularFilmsList.DisplayedFilm] = []
    var displayFilms: [PopularFilmsScene.PopularFilmsList.DisplayedFilm] = []
    
    override func awakeFromNib() {
        super.awakeFromNib()
        PopularFilmsConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureTableViewOnLoad()
        self.requestGetPopularFilms()
    }
    
    // MARK: Requests
    
    func requestGetPopularFilms() {
        self.loaderIndicatorView.startAnimating()
        self.page += 1
        let request = PopularFilmsScene.PopularFilmsList.Request(page: self.page)
        output?.getFilms(request: request)
    }
    
    // MARK: Display logic
    
    func displayFilms(viewModel: PopularFilmsScene.PopularFilmsList.ViewModel) {
        
        self.loaderIndicatorView.stopAnimating()
        
        if let error = viewModel.tmdbError {
            let alert = UIAlertController(title: error.title, message: error.description, preferredStyle: UIAlertControllerStyle.alert)
            alert.addAction(UIAlertAction(title: "Accept", style: .cancel, handler: { action in
                }))
            self.present(alert, animated: true, completion: nil)
            return
        }
        if self.page == 1 {
            self.displayFilms = viewModel.displayFilms
        }
        else {
            self.displayFilms += viewModel.displayFilms
        }
        self.filteredDisplayFilms = self.displayFilms
        self.popularFilmsTableView.reloadData()
    }
 
    // MARK: UI Events
    
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension PopularFilmsViewController: PopularFilmsPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
